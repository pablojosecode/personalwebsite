"use client"
import r from"react";var d="__wrap_b",f="__wrap_o",m=typeof window=="undefined",p=m?r.useEffect:r.useLayoutEffect,y=(o,n,e)=>{e=e||document.querySelector(`[data-br="${o}"]`);let s=e.parentElement,c=_=>e.style.maxWidth=_+"px";e.style.maxWidth="";let t=s.clientWidth,i=s.clientHeight,a=t/2-.25,l=t+.5,u;if(t){for(;a+1<l;)u=Math.round((a+l)/2),c(u),s.clientHeight===i?l=u:a=u;c(l*n+t*(1-n))}e.__wrap_o||(e.__wrap_o=new ResizeObserver(()=>{self.__wrap_b(0,+e.dataset.brr,e)})).observe(s)},v=y.toString(),b=(o,n="")=>r.createElement("script",{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:(o?"":`self.${d}=${v};`)+n}}),E=r.createContext(!1),x=({children:o})=>r.createElement(E.Provider,{value:!0},b(!1),o),R=({as:o="span",ratio:n=1,children:e,...s})=>{let c=r.useId(),t=r.useRef(),i=r.useContext(E);return p(()=>{t.current&&(self[d]=y)(0,n,t.current)},[e,n]),p(()=>()=>{if(!t.current)return;let a=t.current[f];!a||(a.disconnect(),delete t.current[f])},[]),process.env.NODE_ENV==="development"&&e&&!Array.isArray(e)&&typeof e=="object"&&"type"in e&&typeof e.type=="string"&&e.type!=="span"&&console.warn(`<Balancer> should not wrap <${e.type}> inside. Instead, it should directly wrap text or inline nodes.

Try changing this:
  <Balancer><${e.type}>content</${e.type}></Balancer>
To:
  <${e.type}><Balancer>content</Balancer></${e.type}>`),r.createElement(r.Fragment,null,r.createElement(o,{...s,"data-br":c,"data-brr":n,ref:t,style:{display:"inline-block",verticalAlign:"top",textDecoration:"inherit"},suppressHydrationWarning:!0},e),b(i,`self.${d}("${c}",${n})`))};if(!m&&process.env.NODE_ENV!=="production"){let o=document.querySelector("[data-next-hide-fouc]");if(o){let n=s=>{for(let c of s)for(let t of Array.from(c.removedNodes)){if(t!==o)continue;e.disconnect();let i=document.querySelectorAll("[data-br]");for(let a of Array.from(i))self[d](0,+a.dataset.brr,a)}},e=new MutationObserver(n);e.observe(document.head,{childList:!0})}}var S=R;export{x as Provider,S as default};
//# sourceMappingURL=index.mjs.map