import{a as t,b as C,c as m,d,e as w,f as E,g as p,h as g}from"./chunk-FUIF3GTR.js";import T from"fs/promises";async function u(o){if(!process.env.AWS_LAMBDA_FUNCTION_NAME)return null;try{let i=await T.readFile(`/opt/edge-config/${o.id}.json`,"utf-8");return JSON.parse(i)}catch{return null}}function N(o){if(!o)throw new Error("@vercel/edge-config: No connection string provided");let i=p(o);if(!i)throw new Error("@vercel/edge-config: Invalid connection string provided");let f=`https://edge-config.vercel.com/${i.id}`,h="1",c={Authorization:`Bearer ${i.token}`};return{async get(e){let n=await u(i);return n?(d(e),Promise.resolve(E(n.items[e]))):(d(e),g(`${f}/item/${e}?version=${h}`,{headers:new Headers(c),cache:"no-store"}).then(async r=>{if(r.ok)return r.json();if(await r.arrayBuffer(),r.status===401)throw new Error(t.UNAUTHORIZED);if(r.status===404){if(r.headers.has("x-edge-config-digest"))return;throw new Error(t.EDGE_CONFIG_NOT_FOUND)}if(r.cachedResponseBody!==void 0)return r.cachedResponseBody;throw new Error(t.UNEXPECTED)},()=>{throw new Error(t.NETWORK)}))},async has(e){let n=await u(i);return n?(d(e),Promise.resolve(C(n.items,e))):(d(e),g(`${f}/item/${e}?version=${h}`,{method:"HEAD",headers:new Headers(c),cache:"no-store"}).then(r=>{if(r.status===401)throw new Error(t.UNAUTHORIZED);if(r.status===404){if(r.headers.has("x-edge-config-digest"))return!1;throw new Error(t.EDGE_CONFIG_NOT_FOUND)}if(r.ok)return!0;throw new Error(t.UNEXPECTED)},()=>{throw new Error(t.NETWORK)}))},async getAll(e){let n=await u(i);if(n)return e===void 0?Promise.resolve(E(n.items)):(w(e),Promise.resolve(E(m(n.items,e))));Array.isArray(e)&&w(e);let r=Array.isArray(e)?new URLSearchParams(e.map(s=>["key",s])).toString():null;return r===""?Promise.resolve({}):g(`${f}/items?version=${h}${r===null?"":`&${r}`}`,{headers:new Headers(c),cache:"no-store"}).then(async s=>{if(s.ok)return s.json();if(await s.arrayBuffer(),s.status===401)throw new Error(t.UNAUTHORIZED);if(s.status===404)throw new Error(t.EDGE_CONFIG_NOT_FOUND);if(s.cachedResponseBody!==void 0)return s.cachedResponseBody;throw new Error(t.UNEXPECTED)},()=>{throw new Error(t.NETWORK)})},async digest(){let e=await u(i);return e?Promise.resolve(e.digest):g(`${f}/digest?version=1`,{headers:new Headers(c),cache:"no-store"}).then(async n=>{if(n.ok)return n.json();if(await n.arrayBuffer(),n.cachedResponseBody!==void 0)return n.cachedResponseBody;throw new Error(t.UNEXPECTED)},()=>{throw new Error(t.NETWORK)})}}}var a;function l(){a||(a=N(process.env.EDGE_CONFIG))}var P=(...o)=>(l(),a.get(...o)),R=(...o)=>(l(),a.getAll(...o)),A=(...o)=>(l(),a.has(...o)),D=(...o)=>(l(),a.digest(...o));export{N as createClient,D as digest,P as get,R as getAll,A as has,p as parseConnectionString};
