/// <reference types="./operator-node.d.ts" />
import { freeze } from '../util/object-utils.js';
export const COMPARISON_OPERATORS = [
    '=',
    '==',
    '!=',
    '<>',
    '>',
    '>=',
    '<',
    '<=',
    'in',
    'not in',
    'is',
    'is not',
    'like',
    'not like',
    'match',
    'ilike',
    'not ilike',
    '@>',
    '<@',
    '?',
    '?&',
    '!<',
    '!>',
    '<=>',
    '!~',
    '~',
    '~*',
    '!~*',
    '&&',
    '||',
    '@@',
    '@@@',
    '!!',
    '<->',
];
export const UNARY_FILTER_OPERATORS = ['exists', 'not exists'];
/**
 * @internal
 */
export const OperatorNode = freeze({
    is(node) {
        return node.kind === 'OperatorNode';
    },
    create(operator) {
        return freeze({
            kind: 'OperatorNode',
            operator,
        });
    },
});
