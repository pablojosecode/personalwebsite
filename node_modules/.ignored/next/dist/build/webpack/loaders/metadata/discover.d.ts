import type webpack from 'webpack';
import type { CollectingMetadata } from './types';
export declare const METADATA_RESOURCE_QUERY = "?__next_metadata";
export declare const STATIC_METADATA_IMAGES: {
    readonly icon: {
        readonly filename: "icon";
        readonly extensions: readonly ["ico", "jpg", "jpeg", "png", "svg"];
    };
    readonly apple: {
        readonly filename: "apple-icon";
        readonly extensions: readonly ["jpg", "jpeg", "png"];
    };
    readonly favicon: {
        readonly filename: "favicon";
        readonly extensions: readonly ["ico"];
    };
    readonly openGraph: {
        readonly filename: "opengraph-image";
        readonly extensions: readonly ["jpg", "jpeg", "png", "gif"];
    };
    readonly twitter: {
        readonly filename: "twitter-image";
        readonly extensions: readonly ["jpg", "jpeg", "png", "gif"];
    };
};
export declare function createStaticMetadataFromRoute(resolvedDir: string, { route, resolvePath, isRootLayer, loaderContext, pageExtensions, }: {
    route: string;
    resolvePath: (pathname: string) => Promise<string>;
    isRootLayer: boolean;
    loaderContext: webpack.LoaderContext<any>;
    pageExtensions: string[];
}): Promise<CollectingMetadata | null>;
export declare function createMetadataExportsCode(metadata: Awaited<ReturnType<typeof createStaticMetadataFromRoute>>): string;
