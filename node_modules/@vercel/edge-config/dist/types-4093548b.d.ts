/**
 * Parse the edgeConfigId and token from an Edge Config Connection String.
 *
 * Edge Config Connection Strings look like this:
 * https://edge-config.vercel.com/<edgeConfigId>?token=<token>
 *
 * @param text - A potential Edge Config Connection String
 * @returns The id and token parsed from the given Connection String or null if
 * the given text was not a valid Edge Config Connection String.
 */
declare function parseConnectionString(text: string): {
    id: string;
    token: string;
} | null;

interface EmbeddedEdgeConfig {
    digest: string;
    items: Record<string, EdgeConfigValue>;
}
/**
 * Edge Config Client
 */
interface EdgeConfigClient {
    get: <T = EdgeConfigValue>(key: string) => Promise<T | undefined>;
    getAll: <T = EdgeConfigItems>(keys?: (keyof T)[]) => Promise<T>;
    has: (key: string) => Promise<boolean>;
    digest: () => Promise<string>;
}
type EdgeConfigItems = Record<string, EdgeConfigValue>;
type EdgeConfigValue = string | number | boolean | null | {
    [x: string]: EdgeConfigValue;
} | EdgeConfigValue[];

export { EdgeConfigClient as E, EdgeConfigItems as a, EdgeConfigValue as b, EmbeddedEdgeConfig as c, parseConnectionString as p };
